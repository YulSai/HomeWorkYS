package HomeWork1;

//1.3 Использовать ВСЕ возможные побитовые операции с числами -42 и -15

public class Task02 {
    public static void main(String[] args) {
        int a;
        int b;
        int c;

        a = -42;     // 11010110
        b = -15;     // 11110001

        c = ~a;           // ~11010110 = 00101001
        System.out.println("~ " + a + " = " + c);

        c = ~b;           // ~11110001 = 00001110
        System.out.println("~ " + b + " = " + c);

        c = a & b;        // 11010110 & 11110001 = 11010000
        System.out.println(a + " & " + b + " = " + c);

        c = a | b;      // 11010110 | 11110001 = 11110111
        System.out.println(a + " | " + b + " = " + c);

        c = a ^ b;      // 11010110 ^ 11110001 = 00100111
        System.out.println(a + " ^ " + b + " = " + c);

        c = a >> b;      // 11010110 >> 11110001 = 11111111
        System.out.println(a + " >> " + b + " = " + c);

        c = b >> a;      // 11110001 >> 11010110 = 11111111
        System.out.println(a + " >> " + b + " = " + c);

        c = a >> 3;      // 11010110 >> 00000011 = 11111010
        System.out.println(a + " >> 3" + " = " + c);

        c = b >> 1;      // 11110001 >> 00000001 = 11111000
        System.out.println(b + " >> 1" + " = " + c);

        c = a << b;      // 11010110 << 11110001 = 1111 1010 1100 0000 0000 0000 0000
        System.out.println(a + " << " + b + " = " + c);

        c = b << a;      // 11110001 << 11010110 = 1100 0100 0000 0000 0000 0000 0000
        System.out.println(b + " << " + a + " = " + c);

        c = a >>> b;      // 11010110 >>> 11110001 = 0111 1111 1111 1111
        System.out.println(a + " >>> " + b + " = " + c);

        c = b >>> a;      // 11110001 >> 11010110 = 0011 1111 1111
        System.out.println(b + " >>> " + a + " = " + c);

        c = a >>> 2;      // 11010110 >>> 00000010 = 0011 1111 1111 1111 1111 1111 1111 0101
        System.out.println(a + " >>> 2" + " = " + c);

        c = b >>> 2;      // 11110001 >>> 00000001 = 0011 1111 1111 1111 1111 1111 1111 1100
        System.out.println(b + " >>> 2" + " = " + c);

        a >>= 3;          // 11010110 >>= 00000011 = 11111010
        System.out.println("42 >>= 3" + " = " + a);

        b >>= 1;          // 11110001 >> 00000001 = 11111000
        System.out.println("15 >>= 1" + " = " + b);
    }
}
